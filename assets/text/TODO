1)  ANSI CSI CU[BDPU] sequences & italic
2)  Fix & finish Arabic/RTL text tool support
3)  Documentation, instrumentation & unit tests
4)  Layers & layout (e.g. for comics, zines, etc.)
5)  Open and toggle a reference image in the background
6)  Client-Server or Peer-to-Peer realtime collaboration
7)  Arbitrary {format,palette}s ({4,8} bit ANSI/mIRC, etc.)
8)  {record,replay} {keyboard,mouse,...} events in debugging builds
9)  Unit tools: arrow, {cloud,speech bubble}, curve, measure, polygon, triangle
10) Integrate ENNTool code in the form of OpenGL-based animation window (see 13) and 14))
11) Composition, parametrisation & keying of tools from higher-order operators (brushes, functions, filters, outlines, patterns & shaders) and unit tools
12) Sprites & scripted (Python?) animation on the basis of asset traits and {composable,parametrised} patterns (metric flow, particle system, rigging, ...)
13) GUI TODO list:
    a) switch to Gtk
    b) replace logo w/ canvas panel in About dialogue
    c) Settings/Settings window (e.g. autosave, hide cursor on leaving window, ...)
    d) replace resize buttons w/ {-,edit box,+} buttons & lock button re: ratio (ty lol3)

Release roadmap:
1)  {copy,cut,delete,insert from,paste}, edit asset in new canvas, import from {canvas,object}
2)  BUG: a) apply tool b) move cursor c) undo d) cursor artifacts
3)  add hotkeys.txt mIRC art canvas to help menu
4)  operators: crop, scale, shift, slice
5)  auto{load,save} & {backup,restore}
6)  tools: unicode block elements
7)  floating/dockable toolbar

vim:ff=dos tw=0
