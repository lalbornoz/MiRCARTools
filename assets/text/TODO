1)  General {cleanup,refactor}
2)  Incremental auto{load,save} & {backup,restore}
3)  GUI: a) scrollbar b) switch from wxPython to GTK
4)  Open and toggle a reference image in the background
5)  Client-Server or Peer-to-Peer realtime collaboration
6)  Arbitrary {format,palette}s ({4,8} bit ANSI/mIRC, etc.)
7)  Hotkey & graphical interfaces to {composed,parametrised} tools
8)  Layer, layout (e.g. for comics, zines, etc.) & {re,un}do canvas traits
9)  {Insert,{ex,im}port}ing from/to ANSI, Blender, GIF, HTML, mIRC, printer, SAUCE, WEBM, etc. {clipboard,file}
10) Asset management (e.g. kade, lion, etc.) & traits w/ simple linking & synchronised editing respecting layers
11) Sprites & scripted (Python?) animation on the basis of asset traits and {composable,parametrised} patterns (metric flow, particle system, rigging, ...)
12) Composition and parametrisation of tools from higher-order operators (brushes, filters, outlines, patterns & shaders) and unit tools; unit tools:
    a) geometric primitives (arrow, circle, cloud/speech bubble, curve, heart, hexagon, line, pentagon, polygon, rhombus, triangle, square, star)
    b) regions (crop, duplicate, erase, fill, invert, measure, pick, rotate, scale, select, shift, slice, tile, translate)
    c) text (edit, Unicode sets)

vim:tw=0
