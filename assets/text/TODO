1)  ANSI CSI CU[BDPU] sequences
3)  Documentation, instrumentation & unit tests
4)  Layers & layout (e.g. for comics, zines, etc.)
5)  Open and toggle a reference image in the background
6)  Client-Server or Peer-to-Peer realtime collaboration
7)  Arbitrary {format,palette}s ({4,8} bit ANSI/mIRC, etc.)
8)  Unit tools: arrow, {cloud,speech bubble}, curve, polygon
9)  {record,replay} {keyboard,mouse,...} events in debugging builds
10) Integrate ENNTool code in the form of OpenGL-based animation window (see 13) and 14))
11) Composition, parametrisation & keying of tools from higher-order operators (brushes, functions, filters, outlines, patterns & shaders) and unit tools
12) Sprites & scripted (Python?) animation on the basis of asset traits and {composable,parametrised} patterns (metric flow, particle system, rigging, ...)
13) GUI TODO list:
    a) switch to Gtk
    b) canvas preview in Open dialogue(s)
    c) https://material.io/resources/icons/?style=baseline
    d) replace logo w/ canvas panel in About dialogue, revisit melp? dialogue
    e) replace resize buttons w/ {-,edit box,+} buttons & lock button re: ratio (ty lol3)
    f) Settings window (e.g. autosave parameters, cursor opacity, default colours, hide cursor on leaving window, keyboard/mouse map, show cell position tooltip on mouse hover, ...)

vim:ff=dos tw=0
